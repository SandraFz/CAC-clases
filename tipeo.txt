5- Formatos gráficos

Formatos gráficos para páginas web

las nociones básicas para el uso de archivos gráficos son sencillas, conocerlas, aunque sea ligeramente, nos ayudará a crear sitios agadables y rápidos. No cometer errores en el uso de las imágenes es fundamental, aunque no seas un diseñador, su buen uso también redundadá en una carga del sitio más ágil y dinámica.

Tipos de archivos

En Internet se utilizan principalmente los tipos de archivos PNG, GIF y JPG, pensandos especialmente para optimizar el tamaño que ocupan en disco, ya que los archivos pequeños se transmiten más rápidamente por la Red. Actualmente, también el uso de formatos SVG, se está incrementando debido a que se caracterizan por su pequeño tamaño, sencillez y nitidez.

Hay varios formatos de imágenes o gráficos vectoriales, el más usado de ellos es el SVG.

El formato de archivo GIF se usa para las imágenes que tengan dibujos,  mientras que el formato JPG se usa para las fotografías. Los dos comprimen las imágenes para guardarlas. La forma de comrpimir la imagen que utilizan daca formato es lo que los hace ideales para unos u otros propósitos.

Adicionalmente, se pueden usar un tercer formato gráfico en las páginas web, PNG. Este formato no tiene tanta aceptación como el GIF o JPG por varias razones, entre las que destacan el desconocimiento del formato por parte de los desarrolladores, que la herramientas habituales para tratar gráficos (como por ejemplo Photoshop) generalmente no lo soportan y que los navegadores antiguos también tienen problemas para visualizarlos.

Sin embargo, el formato se comporta muy bien en cuanto a compresión y calidad del gráfico conseguido, por lo que resulta muy útil en infinidad de casos. Todos estos problemas han pasado y ya sólo Internet Explorer tiene algunos fallos cuando trata con PNG, pero la aceptación actual es más que suficiente para incorporarlo a nuestras posibilidades reales de trabajo con formatos y optimización de archivos.


Formato GIF

Además de ser un archivo ideal para las imágenes que estén digujadas tiene muchas otras características que son importantes y útiles.

Compresión: es muy buena para dibujos, como ye hemos dicho. Incluso puede ser interesante si la imagen es muy pequeña, aunque sea una foto.

Transparencia: es una utilidad para definir ciertas partes del dibujo como transparentes. De este modo podemos coloca las imágenes sobre distintos fondos sin que se fea el cuadrado donde está inscrito el dibujo, mostrando la silueta del dibujo en cuestión.

Para crear un gif transparente debemos utilizar un programa de diseño gráfico, con el que podemos indicar qué colores del dibujo queremos que sean transparentes. Generalmente, definimos la transparencia cuando vamos a guardar el gráfico.

Colores: con este formato gráfico podemos utilizar paletas, conjuntos, de 256 colores o menos. Este es un detalle muy importante, puesto que cuantos menos colores utilicemos en la imagen, por lo general, menos ocupará el archivo. En ocasiones, aunque utilicemos menos colores en un gráfico, este no pierde mucho en calidad, llegando a ser inapreciable a la vista.

En algunos programas podemos modificar la cantidad de colores al guardar el archivo, en otros lo hacemos mientras creamos el gráfico.

En esta imagon, tomada con distintas paletas de colores, se puede apreciar como con pocos colores se ven bien el gráfico y cómo pierde un poco a medida que le resamos colores.


Formato JPG

Compresión: cuenta con un algoritmo de compresión casi ideal. Este formato, es ideal para fotografías. Además, con JPG podemos definir la calidad de la imagen, con calidad baja el fichero ocupará menos, y viceversa.

Colores: JPG trabaja siempre con 16 millones de colores, ideal para fotografías.


Otimizar ficheros

Para que las imágenes ocupen lo menos posible y se transfieran rápidamente por la Red debemos aprender a optimizar los ficheros gráficos. Para ello debemos hacer lo siguiente:

Para los archivos GIF y PNG:

Reduciremos el número de colores de nuestra paleta. Esto se hace con nuestro editor gráfico, en muchos casos podremos hacerlo al guardar el archivos.

Para los archivos JPG:

Ajustaremos la calidad del archivo cuando lo estemos guardando. Este formato nos permite bajar mucho la calidad de la imagen sin que esta pierda mucho en su aspecto visual.

Es imprescindible disponer para optimizar la imagen de una herramienta buena que nos permita configurar estas características de la imagen con libertad y fácilmente. Hay muchas herramientas de uso libre que incorporan una opción de "Exportar para Web" con la que podemos definir los colores del gif, calidad del JPG y PNG u otras opciones en varias muestras a la vez. Así con todas las opciones disponibles podemos otimizar la imagen de una manera precisa con los resultados que deseamos.


Qué es el formato PNG

El formato PNG (Portable Network Graphics) es un formato de archivos de gráficos de mapa de bits (una trama). Fue desarrollado en 1995 como una algernativa gratuita al formato GIF, cuyos derechos perteneces a Unisys (propietario del algoritmo de compresión LZW) y a quién los editores de software deben pagar regalías por usar este formato. Por lo tanto, PGN (o PNG?) es un acrónimo recursibo de PNG No es GIF.


Caracter´sticas del formato PNG

El formato PNG permite almacenar imágenes en blanco y negro (una profundidad de color de 16 bis por píxel) y en color real (una profundidad de color de 48 bits por píxel), así como también imágenes indexadas, utilizando una paleta de 256 colores. Además, soporta la transparencia de canal alfa, es decir, la posibilidad de definir 256 niveles de transparencia, mientras que el formato GIF permite que se defina como transparente solo un color de la paleta. También posee una función de entrelazado que permite mostrar la imagen de forma gradual.

La compresión que ofrece este formato es (compresi´n sin pérdida) de 5 a 25% mejor que la compresión GIF.

Por última, PNG almacena información gama de la imagen, que posibilita una corrección de gama y permite que sea independiente del dispositivo de visualización. Los mecanismos de corrección de errores también están almacenado en el archivo para garantizar la integridad.


Características del formato SVG

SVG es la abreviatura en inglés de Scalable Vecto Graphics (Gráficos Vectoriales Escalables).

Es un nuevo estándar usado para la ceación y representación de gráficos e imágenes vectoriales en las páginas web y aplicaciones de internet, aunque también se pueden emplear en la computadora offline.

SVG es un lenguaje gráfico que emplea el formato XML.

Las imágenes en este formato a diferencia de las tradicionales se pueden editar usando editores de texto plano como NotePad+ o hasta con el Bloc de Notas de Windows.

El formato SVG es recomendado por el W3C y es compatible por la mayoría de los navegadores web modernos.

Las imágenes SVG se caracterizan por su tamaño y por ser imágenes vectoriales.

Son usadas en las páginas cuando se necesita mostrar o representar elementos sencillos que no necesitan de alta resolución como gráficos, diagramas, mapas, logotipos, íconos, texto, etc..

En este artículo compartimos de forma sencilla, de forma tal que pueda ser entendido por todos, como crear las imágene SVG, como insertarlas en las páginas web o usarlas offline en la computadora.

-----------------

6.Imágenes en HTML

Atributos básicos para imágenes en HTML

La etiqueta que utilizaremos para insertar una imagen es IMG (imagen). Esta etiqueta no posee su cierre correspondiente y en ella hemos de especificar obligatoriamente el paradero de nuestro archivo gráfico mediante el atributo src (source).

La sintaxis queda entonces de la siguiente forma:

<img src="logo.png">

Para expresar el camino, lo haremos de la misma forma que vimos para los enlaces. Las reglas siguien siendo las mismas, lo único que cambia es que, en lugar de una página de destino, el destino es un archivo gráfico. En el código anterior estamos enlazando con un archivo con extensión .png, pero podrá ser otro tipo de archivo como .gif o .jpg.


Aparte de este atributo, indispensable obviamente para la visualización de la imagen, la etiqueta IMG nos propone otra serie de atributos de mayor o menos utilidad, que listamos a continuación:


Atributo alt

Dentro de las comillas de este atributo colocaremos una brevísima descripción de la imagen. Esta etiqueta nos es indispensable pero presenta varias utilidades. La sintaxis te quedaría de esta manera:

<img src="logo.png" alt="Descripción del logo o imagen">

Primeramente, sirve para el posicionamieto de la página en buscadores. De los atributos alt el buscador puede extraer palabras clave y le ayuda a entender qué función o contenido tiene la imagen, y por lo tanto la página.

Otra utilidad importante la encontramos en determinadas aplicaciones, usadas por personas con discapacidad. Navegadores para ciegos, por ejemplo, no muestran las imágenes y por tanto los alt ofrecen la posibilidad de leerlas. Nunca está de más pensar en crear páginas accesibles.


Atributos height y width

Estos atributos definen la altura y anchura respectivamente de la imagen en píxeles. Aunque estás dimensiones forman parte del estilo de la imagen, y por tanto podrían ir en el CSS, todavía puede ser interesante definirlas dentro del HTML.

Todos los archivos gráficos poseen unas dimensiones de ancho y alto. Estas dimensiones pueden obtenerse a partir del propio diseñoador gráfico o bien haciendo click con el botón derecho sobre la imagen, vista desde el explorador de archivos de tu ordenador, para luego elegir "propiedades" o "información de la imagen" sobre el menú que se despliega.

Un ejemplo de eitqueta IMG con sus valores de anchura y altura declarados te quedaría así:

<img src="logo.gif" width="200" height="300">

Cuando las dimensiones de las imágenes han sido proporcionadas, durante el proceso de carga, el navegador reservara el espacio correspondiente a cada imagen creando una maquetación concreta.

Además de esta utilidad, el altear los valores de estos dos atributos, es una forma inmediata de redimansionar nuesta imagen. Este tipo de utilidad no es siempre aconsejable dado que, si lo que pretendemos es aumentar el tamaño, la pérdida de calidad de la imagen será sensible. Inversamente, si deseamos disminuir su tamaño, estaremos usando un archivo más pesado en KB de lo necesario para la imagen que estamos mostrando con lo que aumentamos el tiempo de descarga de nuestro documento innecesariamente.


Imágenes que son enlaces y el atributo border

Ya habalamos sobre que una imagen puede servir de enlace. Vista la estructura de los enlaces en HTML, podemos muy fácilmente adivinar el tipo de código necesario:

<a href="archivo.html"><img src="imagen.jpg"></a>

El problema de hacer esto en ciertos navegadores es que se crea un borde en la imagen, del mismo colo que el congigurado para los enlaces, lo que suele ser un efecto poco deseado.

Sin embargo, en HTML podemos indicar que una imagen tenga borde. Mediante el atributo "border" se define el tamaño en pixeles del cuadro que reodea la imagen. De esta forma podemos recuadar nuestra imagen si lo deseamos. No es algo que se use mucho, pero resulta particularmente útil cuando deseamos eliminar el borde que aparece cuando la imagen sirve de enlace. En dicho caso tendremos que especificar border="0".

Aunque de cualquier modo, ese borde se puede eliminar igualmente con CSS y será la manera correcta de hacerlo, porque no olvidemos que el borde es un estilo.


Atributos vspace y hspace

Sirven para indicar el espacio libre, en pixeles, que tiene que colocarse ente la imagen y los otros elementos que la rodean, como texto, otras imágenes, etc.. Estos atributos forman parte también de la responsabilidad de las CSS, así que no sería recomendable usarlos.
---------------------------


7.LISTAS

Listas en HTML

Las posibilidades que nos ofrece el HTML en cuestión de tratamiento de texto son realmente notables. No se limitan a lo visto hasta ahora, sino que van más lejos todavía. Varios ejemplos de ellos son las listas, que sirven para enumerar y definir elementos, los textos preformateados y las cabeceras o títulos.

Las listas originalmente están pensadas para citark numerar y definir cosas a través de características, o al menos así lo hacemos en la escritura de textos. Sin embargo, las listas finalmente se utilizan para mucho más que enumerar una serie de puntos, en realidad son un recurso muy interesante para poder maquetar elementos diversos, como baras de navegación, pestañas etc.. Pero esto lo veremos más adelante, cuando apliquemos estilos CSS a las listas.

Podemos distinguir tres tipos de listas HTML:

listas desordenadas,

listas ordenas, y

listas de definición.

Las veremos detenidamente una a una.

Listas desordenadas

Son delimitadas por las etiquetas UL y su cierre (unordered list). Cada uno de los elementos de la lista es citado por medio de una etiqueta LI (LI tiene su cierre, aunque si no lo colocas el navegador al ver el siguiente LI interpretará que estás cerrando el anterior). Un ejemplo es:

<p>Lenguaje de programación</p>

<ul>

<li>PHP</li>

<li>JAVA</li>

<li>Python</li>

</ul>

Podemos definir el tipo de viñeta empleada para cada elemento. Para ello debemos especificarlo por medio del atributo type incluido dentro de la etiqueta de apretura UL, si queremos que el estilo sea válido para toda la lista, o dentro de la etiqueta LI si queremos hacerlo específico den un solo elemento. La sintaxis es del siguiente tipo:

<ul type="tipo de viñeta">

donde tipo de viñeta puede ser uno de los siguientes:

circle

disc

square

Nota: en algunos navegadores no funciona la opción de cambiar el tipo de viñeta a mostrar y por mucho que nos empeñemos, siempre saldrá el redondel negro.

En caso de que no funcione siempre podemos construir la lista a mano con la viñeta que queramos utilizando CSS.

Vamos a ver un ejemplo de lista con un cuadrardo, y en el últuimo elemento colocaremos un círculo. Para ello vamos a colocar el atributo type en la etiqueta UL, con lo que afectará a todos los elementos de la lista.

<ul type="square">

<li>Elemento 1

<li>Elemento 2

<li>Elemento 3

<li type="circle">Elemento 4

</ul>


Listas ordenadas

Las listas ordenadas sirven también para presentar información, en diversos elementos o items, con la particularidad que éstos estarán precedidos de un número o una letra para enumerarlos, siempre por un orden.

Para realizar las listas ordenadas usaremos las etiquetas OL (ordered list) y su cierre. Cada elemento será igualmente indicado por la etiqueta LI, que ya vimos en las listas desordenadas.

Pongamos un ejemplo:

<p>Reglas de convivencia</p>

<ol>

<li>No hacer ruidos molestos

<li>Ser amable con los vecinos

</ol>

Saldría en pantalla:


Reglas de convivencia

No hacer ruidos molestos

Ser amable con los vecinos

Del mismo modo que para las listas desordenadas, las listas ordnadas ofrecen la posibilidad de modificar el estilo. En concreto nos es posible especificar el tipo de numeración empleado eligiendo entre números (1, 2, 3...), leltras minúsculas (a, b, c...) y sus mayúsculas (A, B, C,...) y números romanos en sus versiones mayúsculas (I, II, III...) y minúsculas (i, ii, iii...).

Para realizar dicha selección hemos de utilizar, cono para el caso precedente, el atributo type, el cual será situado dentro de la etiqueta OL. Los valores que puede tomar el atributo en este caso son:

<ol>números(1, 2, 3...)

<ol type="A">mayúsculas (A, B, C,...)

<ol type="a">minúsculas (a, b, c...)

<ol type="I">mayúsculas (I, II, III...)

<ol type="i">minúsculas (i, ii, iii...)

Nota: recordamos que en algunos navegadores no funciona la opción de cambiar el tipo de viñeta a mostrar.

Puede que en algún caso deseemos comenzar nuestra enumeración por un número o letra que no tiene por qué ser necesariamente el primero de todos. Para ello podemos utilizar un segundo atributo, llamado start, que tendrá como valor un número.

Este número, que por defecto es 1, corresponde al valor a partir del cual comenzamos a definir nuestra lista. Para el caso de las letras o los números romanos, el navegador se encarga de hacer la traducción del número a la letra correspondiente.

<p>Reglas de convivencia</p>

<ol start="2" type="A">

<li>No hacer ruidos molestos

<li>Ser amable con los vecinos

</ol>

Nos arrojaría en pantalla:

Reglas de convivencia

No hacer ruidos molestos

ser amable con los vecinos
-------------------------

Listas de definición

Las listas de definición sirven para un conjunto de elementos con pares concepto-descripción. Es decir, se especificarán varios términos por su nombre y se escribirá una definición para cada uno. Cada elemento es presentado junto con su definición, uno detrás de otro.

Para realizar una lista de definición, la etiqueta principal es DL y su cierre (definition list). Las etiquetas del elemento y su definición son DT (definicition term) y DD (definition definition) respectivamente.

Aquí un código de ejemplo y su resultado:

<p>Alimentos lácteos</p>

<dl>

<dt>Leche

<dd>entera

<dt>Queso

<dd>Fontina

<dd>Muzzarella

</dl>

El resultado obtenido:

Alimentos lácteos
Leche
descremada
entera
Queso
Fontina
Muzzarella

Veremos que cada línea DD se ubica más hacia la izquierda. Este tipo de etiquetas son usadas a menudo con el propósito de crear textos más o menos desplazados hacia la izquierda.


Anidando listas

Podemos anidar estas etiquetas obteniendo listas de la manera deseada, como por ejemplo:

<p>Ciudades del mundo</p>

<ul>

<li>Argentina

<ol>

<li>Bariloche

</ol>

<li>Uruguay

<ol>

<li>Montevideo

<li>Punta del Este

</ol>

</ul>

obteniendo:

Ciudades del mundo
Argentina
	Buenos Aires
	Bariloche
Uruguay
	Montevideo
	Punta del Este	

----------------------------

8.TABLAS

Tablas en HTML

Una tabla es un conjunto de celdas dentro de las cuales podemos incorporar contenidos.

HTML dispone de una gran variedad de etiquetas para crear tablas, con su atributos, de las cuales veremos una introducción de este artículo.

En general, se utilizan para representar información tabulada, en filas y columnas. Esto es una realidad en los últimos años, desde que las tablas se han descartado para fines relacionados con la maquetación.

Nota: durante un tiempo, gran parte de los diseñadores de páginas basaron sus maquetaciones en este tipo de artilugios. En efecto, una tabla nos permite organizar y distribuir los espacios de la manera más adecuada. Nos puede ayudar a generar texto en columnas como los periódicos, prefijar los tamaños ocupados por distintas secciones de la página o poner de una manera sencilla un pie de foto a una  imagen.

Hablar hoy de tablas como solución para maquetación ha pasado a la historia. Las webs actuales han acabado con técnicas que incrementen el tamaño del código fuente de las  páginas web, mezclando presentación y contenido. Actualmente toda la maquetación de una página se organiza con CSS, lo que nos da un mayor control de todos los elementos de la página y la posibilidad de separar todos los estilos para definir el aspecto de una web en un fichero aparte del HTML.

Por ello, en el momento actual las tablas se utilizan mucho menos que en el pasado y realmente la recomencación es usarlas solo en los casos en los que necesitemos incluir en una página información tabulada, es decir, dispuesta en filas y columnas. Todo uso basado en tablas para procurar colocar elementos en determinadas posiciones de la página sería incorrecto en las técnicas actuales de diseño de páginas web.

Como veremos, existen diversas etiquetas que se deben utilizar en una forma determinada para la creación de tablas. Por ello, puede que en eun principio nos resulte un poco complicado trabajar con estas estructuras. Si deseamos mostrar datos de una maneera sencilla de leer, dispuestos en filas y columnas, tade o temprano observaremos que las tablas on una rápida solución y apreciremos las posibilidades que nos ofrecen, por otro lado, las tablas han dejado de utilizarse debido a su falta de correlación con el desarrollo Responsive, entre otras características.


Etiquetas básicas para tablas en HTML

Para empezar, nada más sencillo que por el principio: las tablas son definidas por las etiquetas TABLE y su cierre.

Dentro de estas dos etiquetas colocaremos todas las otras etiquetas de las tablas,  hasta llegar a las celdas. Dentro de las celdas ya es permitido colocar textos e imágenes que darán el contenido a la tabla.

Las tablas son descritas por líneas de arriba abajo (y luego por columnas de izquierda a derecha). Cada una de estas líneas, llamada fila, es definida por otra etiqueta y su cierre: TR.

Asimismo, dentro de cada línea, habrá diferentes celdas. Cada una de estas celdas será definida por otra etiqueta: TD. Dentro de ésta y su cierre será donde coloquemos nuestro contenido, el contenido de cada celda.

Ejemplo de estructura de tabla:

<table>

<tr>

<td>Celda 1, linea 1</td>

<td>Celda 2, línea 1</td>

</tr>

<tr>

<td>Celda 1, línea 2</td>

<td>Celda 2, línea 2</td>

</tr>

</table>

El resultado:

Celda 1, línea 1	Celda 2, línea 1
Celda 1, línea 2	Celda 2, línea 2

También es parte de una tabla etiqueta TH (Table Header), que sirve para crear uan celda cuyo contenido posea un título o cabecera de la tabla.

Ejemplo:

<table>
	<tr>
		<th>Celda 1, línea 1</th>
		<th>Celda 2, línea 2</th>
	</tr>
	<tr>
		<td>Celda 1, línea 2</td>
		<td>Celda 2, línea 2</td>
	</tr>
</table>
-------------------------

Atributos para tablas, filas y celdas

A partir de esta idea simple y sencilla, las tablas adquieren otra magnitud cuando les incorpporamos toda una lista de atributos aplicados sobre cada tipo de etiquetas que las componen.

cellspacing: es el espacio entre celdas de la tabla.
cellpadding: es el espacion entre el borde de la celda y su contenido.
border: es el número de píxeles que tendra´el borde de la tabla.
bordercolor: es el color a asignar al borde de la tabla.


Podemos usar prácticamante cualquiert tipo de etiqueta dentre de la etiqueta TD para, de esta forma, escribir su contenido.

Las etiquetas situadas en el interior de la celda no modifican el resto del documento.

Las etiquetas de fuera de la celdo no son tenidas en cuenta por ésta.

Podemos especificar el formato de nuestras celdas a partir de etiquetas introducidas en su interior o mediante atributos colocados dentro de la etiqueta de celda TD o bien, dentro de la etiqueta TR, si deseamos que el atributo sea válido para toda la línea.

La forma más útil y actual de dar forma a las celdas es a partir de CSS que veremos más adelante.

A continuación algunos atributos útiles para la construcción de nuestas tablas:

align: justifica el texto de la celda del mismo modo que si fuese el de un párrafo.
valign: podemos elegir si queremos que el texto apareza arriba (top), en el centro (middle) o abajo (bottom) de la celda.
bgcolor: da color a la celda o línea elegida.
bordercolor: define el color del borde.
background: nos permite colocar un formdo para la celda a partir de un enlace a una imagen.
height: define la altura de la celda en píxels o porcentaje.
width: define la anchura de la celda en píxels o porcentaje.
coslpan: expande una celda horizontalmente.
rowspan:expande una celda verticalmente.

Es de destacar que si definimos una celda de un ancho 100 por ejemplo, y colocamos en la celda un contenido como una imagen que mida más de 100 píxeles, la celda crecerá en horizontal todo lo necesario para que la imagen quepa. Si el elemento, aunque más ancho, fuera divisible (como un texto) el ancho sería respetado y el texto crecería hacia abajo o lo que es lo mismo, en altura, como señalábamos en el anterior párrafo.

Ejemplo:

<td width="70">

Define un ancho de 70 píxeles a la celda. Sin embargo,

<td width="80%">

define un ancho a la celda del 80% de la anchura del total de la tabla.

Los atributos rowspan y colspan son también utilizados frecuentemente. Gracias a ellos es posible expandir celdas fusionando éstas con sus vecinas. El valor que pueden tomar estas etiquetas es numérico. El número representa la cantidad de celdas fusionadas.

Así:

<td colspan="2">

fusionará la celda en cuestión con su vecina derecha.

Del mismo modo,

<td rowspan="2">

expandirá la celda hacia abajo fuionándose con la celda inferior.

No debes maquetar con tablas.

En HTML (antes de incorporar el código CSS) se utilizaban las tablas para maquetar páginas.

Con maquetar nos referimos al proceso por el cual se posicionan contenidos en la pantalla atendiendo a una estructura. Este proceso se conoce como maquetación y a la estructura muchas veces se la conoce como layout.

Con las tablas podemos generar una serie de columnas, espacios como cabecera o pie donde podemos mostrar contenidos estructurados que den la sensación de un diseño bien realizado, dividido en columnas y filas, como la  maquetación de una revista o un portal. Sin embargo, usar las tablas NO es una práctica recomendada.

Esta sección sirve para estudiar cómo se hacián las cosas antes y para practicar con HTML, pero hoy ya no se utiliza este tipo de técnicas.

Actualmente se usa el lenguaje CSS y sus múltiples herramientas para producir un contenido correctamente maquetado.